{
  "menu": {
    "0": {
      "label": "Packages",
      "items": {
        "examples": "examples",
        "packages.global-linking": "global-linking",
        "packages.uikit-utils": "uikit-utils"
      }
    },
    "1": {
      "label": "VueComponents",
      "items": {
        "src.vue.Container.vue": "Container",
        "src.vue.Element.vue": "Element",
        "src.vue.Modal.vue": "Modal",
        "src.vue.SpecialElement.vue": "SpecialElement"
      }
    },
    "2": {
      "label": "UIkitComponents",
      "items": {
        "src.uikit.accordion.js": "accordion",
        "src.uikit.togglable.js": "togglable"
      }
    },
    "3": {
      "label": "Modules",
      "items": {
        "packages.global-linking.src.config.js": "config",
        "packages.global-linking.src.test.js": "test",
        "packages.uikit-utils.src.ajax.js": "ajax",
        "src.uikit.types.js": "types",
        "src.utils.animation.js": "animation"
      }
    }
  },
  "config": {
    "menus": {
      "menu": true,
      "packages": true,
      "files": true
    }
  },
  "types": {
    "NodeLike": "src.uikit.types.js",
    "Integer": "src.uikit.types.js",
    "VueComponentInstance": "src.uikit.types.js",
    "TestConfig": "packages.global-linking.src.config.js"
  },
  "nodeGlobals": [
    "Object",
    "Function",
    "Array",
    "Number",
    "parseFloat",
    "parseInt",
    "Infinity",
    "NaN",
    "undefined",
    "Boolean",
    "String",
    "Symbol",
    "Date",
    "Promise",
    "RegExp",
    "Error",
    "EvalError",
    "RangeError",
    "ReferenceError",
    "SyntaxError",
    "TypeError",
    "URIError",
    "JSON",
    "Math",
    "console",
    "Intl",
    "ArrayBuffer",
    "Uint8Array",
    "Int8Array",
    "Uint16Array",
    "Int16Array",
    "Uint32Array",
    "Int32Array",
    "Float32Array",
    "Float64Array",
    "Uint8ClampedArray",
    "DataView",
    "Map",
    "Set",
    "WeakMap",
    "WeakSet",
    "Proxy",
    "Reflect",
    "decodeURI",
    "decodeURIComponent",
    "encodeURI",
    "encodeURIComponent",
    "escape",
    "unescape",
    "eval",
    "isFinite",
    "isNaN",
    "SharedArrayBuffer",
    "Atomics",
    "WebAssembly",
    "DTRACE_NET_SERVER_CONNECTION",
    "DTRACE_NET_STREAM_END",
    "DTRACE_HTTP_SERVER_REQUEST",
    "DTRACE_HTTP_SERVER_RESPONSE",
    "DTRACE_HTTP_CLIENT_REQUEST",
    "DTRACE_HTTP_CLIENT_RESPONSE",
    "global",
    "process",
    "GLOBAL",
    "root",
    "Buffer",
    "clearImmediate",
    "clearInterval",
    "clearTimeout",
    "setImmediate",
    "setInterval",
    "setTimeout"
  ],
  "resources": {
    "examples": {
      "readme": "# The readme files\n\n## this header (h2) is listen in the menu\n\n### this is just a sub header",
      "path": "/Users/jms/doctools/examples",
      "type": "package",
      "name": "examples",
      "resource": "examples",
      "fileInPackage": "./",
      "packageJson": {
        "name": "yootheme-doctools-example-package",
        "version": "1.0.0",
        "description": "simple example package",
        "main": "parser.js",
        "bin": {
          "doctools": "./bin/doctools.js"
        },
        "scripts": {
          "dev": "./bin/doctools.js"
        },
        "extra": {
          "scriptDocs": {
            "dev": "launches the examples of this package"
          }
        },
        "repository": {
          "type": "git",
          "url": "dasdeck/doctools",
          "workspace": "examples"
        },
        "author": "",
        "license": "MIT",
        "dependencies": {
          "glob": "^7.1.2",
          "jsdoc-api": "^4.0.3",
          "jsdom": "^11.7.0",
          "lodash": "^4.17.5",
          "minimist": "^1.2.0",
          "vue-router": "^3.0.1",
          "babel-core": "^6.26.0",
          "babel-loader": "^7.1.4",
          "babel-preset-env": "^1.6.1",
          "babel-preset-stage-2": "^6.24.1",
          "css-loader": "^0.28.11",
          "marked": "^0.3.19",
          "uikit": "^3.0.0-beta.42",
          "vue": "^2.5.16",
          "vue-loader": "^14.2.2",
          "vue-template-compiler": "^2.5.16",
          "webpack": "^4.5.0",
          "webpack-cli": "^2.0.14",
          "webpack-dev-server": "^3.1.3"
        }
      },
      "package": null,
      "packages": {
        "global-linking": "packages.global-linking",
        "uikit-utils": "packages.uikit-utils"
      },
      "resources": {
        "src.uikit.accordion.js": "src.uikit.accordion.js",
        "src.uikit.accordion.js.md": "src.uikit.accordion.js.md",
        "src.uikit.togglable.js": "src.uikit.togglable.js",
        "src.uikit.types.js": "src.uikit.types.js",
        "src.utils.animation.js": "src.utils.animation.js",
        "src.vue.Container.vue": "src.vue.Container.vue",
        "src.vue.Element.vue": "src.vue.Element.vue",
        "src.vue.Modal.vue": "src.vue.Modal.vue",
        "src.vue.SpecialElement.vue": "src.vue.SpecialElement.vue"
      }
    },
    "packages.global-linking": {
      "readme": "# test for global links to types etc.",
      "path": "/Users/jms/doctools/examples/packages/global-linking",
      "type": "package",
      "name": "global-linking",
      "resource": "packages.global-linking",
      "fileInPackage": "./packages/global-linking",
      "packageJson": {},
      "package": "examples",
      "packages": {},
      "resources": {
        "packages.global-linking.README.md": "packages.global-linking.README.md",
        "packages.global-linking.src.config.js": "packages.global-linking.src.config.js",
        "packages.global-linking.src.test.js": "packages.global-linking.src.test.js"
      }
    },
    "packages.global-linking.README.md": {
      "readme": "# test for global links to types etc.",
      "path": "/Users/jms/doctools/examples/packages/global-linking/README.md",
      "type": "markdown",
      "name": "README",
      "resource": "packages.global-linking.README.md",
      "fileInPackage": "./packages/global-linking/README.md",
      "package": "packages.global-linking"
    },
    "packages.global-linking.src.config.js": {
      "path": "/Users/jms/doctools/examples/packages/global-linking/src/config.js",
      "type": "module",
      "name": "config",
      "resource": "packages.global-linking.src.config.js",
      "fileInPackage": "./packages/global-linking/src/config.js",
      "package": "packages.global-linking",
      "module": {
        "global": {
          "TestConfig": {
            "meta": {
              "lineno": 2,
              "columnno": 1,
              "code": {}
            },
            "description": "defaults",
            "kind": "typedef",
            "name": "TestConfig",
            "longname": "TestConfig",
            "scope": "global"
          },
          "module.exports": {
            "meta": {
              "range": [
                48,
                158
              ],
              "lineno": 6,
              "columnno": 0,
              "code": {
                "id": "astnode100000003",
                "name": "module.exports",
                "type": "ObjectExpression",
                "value": "{\"configKey1\":\"default\"}",
                "paramnames": []
              }
            },
            "undocumented": true,
            "name": "exports",
            "longname": "module.exports",
            "kind": "member",
            "memberof": "module",
            "scope": "static",
            "children": {
              "module.exports.configKey1": {
                "meta": {
                  "range": [
                    135,
                    156
                  ],
                  "lineno": 12,
                  "columnno": 4,
                  "code": {
                    "id": "astnode100000008",
                    "name": "configKey1",
                    "type": "Literal",
                    "value": "default"
                  }
                },
                "description": "default value one",
                "type": {
                  "names": [
                    "String"
                  ]
                },
                "name": "configKey1",
                "longname": "module.exports.configKey1",
                "kind": "member",
                "memberof": "module.exports",
                "scope": "static"
              }
            }
          }
        }
      },
      "component": {}
    },
    "packages.global-linking.src.test.js": {
      "path": "/Users/jms/doctools/examples/packages/global-linking/src/test.js",
      "type": "module",
      "name": "test",
      "resource": "packages.global-linking.src.test.js",
      "fileInPackage": "./packages/global-linking/src/test.js",
      "package": "packages.global-linking",
      "module": {
        "global": {
          "module.exports": {
            "meta": {
              "range": [
                1,
                120
              ],
              "lineno": 2,
              "columnno": 0,
              "code": {
                "id": "astnode100000003",
                "name": "module.exports",
                "type": "ObjectExpression",
                "value": "{\"test\":\"\"}",
                "paramnames": []
              }
            },
            "undocumented": true,
            "name": "exports",
            "longname": "module.exports",
            "kind": "member",
            "memberof": "module",
            "scope": "static",
            "children": {
              "module.exports.test": {
                "meta": {
                  "range": [
                    99,
                    117
                  ],
                  "lineno": 7,
                  "columnno": 4,
                  "code": {
                    "id": "astnode100000008",
                    "name": "test",
                    "type": "FunctionExpression"
                  }
                },
                "params": [
                  {
                    "type": {
                      "names": [
                        "TestConfig"
                      ]
                    },
                    "description": "the config for the test",
                    "name": "conf"
                  }
                ],
                "name": "test",
                "longname": "module.exports.test",
                "kind": "function",
                "memberof": "module.exports",
                "scope": "static",
                "simpleName": "test",
                "tables": {
                  "arguments": [
                    {
                      "0": "name",
                      "1": "type",
                      "3": "description"
                    },
                    {
                      "0": "conf",
                      "1": {
                        "template": "types",
                        "type": {
                          "names": [
                            "TestConfig"
                          ]
                        }
                      },
                      "3": "the config for the test"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "component": {}
    },
    "packages.uikit-utils": {
      "path": "/Users/jms/doctools/examples/packages/uikit-utils",
      "type": "package",
      "name": "uikit-utils",
      "resource": "packages.uikit-utils",
      "fileInPackage": "./packages/uikit-utils",
      "packageJson": {
        "name": "uikit-utils"
      },
      "package": "examples",
      "packages": {},
      "resources": {
        "packages.uikit-utils.src.ajax.js": "packages.uikit-utils.src.ajax.js",
        "packages.uikit-utils.src.ajax.js.md": "packages.uikit-utils.src.ajax.js.md"
      }
    },
    "packages.uikit-utils.src.ajax.js": {
      "assets": {
        "readme": "packages.uikit-utils.src.ajax.js.md"
      },
      "path": "/Users/jms/doctools/examples/packages/uikit-utils/src/ajax.js",
      "type": "module",
      "name": "ajax",
      "resource": "packages.uikit-utils.src.ajax.js",
      "fileInPackage": "./packages/uikit-utils/src/ajax.js",
      "package": "packages.uikit-utils",
      "module": {
        "global": {
          "86qihu32oe4dgsf4g8wy08.js": {
            "meta": {
              "lineno": 1,
              "columnno": 0,
              "code": {}
            },
            "name": "86qihu32oe4dgsf4g8wy08.js",
            "kind": "file",
            "description": "HTTP transport tools\nThe following functions are to work with asynchronous tasks. They are used for executing code asynchronously.",
            "preserveName": true,
            "longname": "86qihu32oe4dgsf4g8wy08.js",
            "scope": "global"
          },
          "ajax": {
            "meta": {
              "range": [
                983,
                2257
              ],
              "lineno": 38,
              "columnno": 0,
              "code": {
                "id": "astnode100000002",
                "name": "exports.ajax",
                "type": "FunctionDeclaration",
                "paramnames": [
                  "url",
                  "options"
                ]
              }
            },
            "description": "Make asynchronous calls to a specific URL and pass it some data.",
            "examples": [
              "### Usage\n\n```javascript\nutil.ajax('/api/users', { responseType: 'json' })\n.then(function(xhr) {\n    console.log(xhr.response);\n});\n```\n\n### Result\n\n```json\n{parsed: 'json-object', with: 'some', example: 'data'}\n```"
            ],
            "tags": [
              {
                "originalTitle": "category",
                "title": "category",
                "text": "web",
                "value": "web"
              }
            ],
            "params": [
              {
                "type": {
                  "names": [
                    "String"
                  ]
                },
                "description": "The URL to call",
                "name": "url"
              },
              {
                "type": {
                  "names": [
                    "Object"
                  ]
                },
                "optional": true,
                "description": "Additional options passed to the ajax call",
                "name": "options",
                "children": {
                  "data": {
                    "type": {
                      "names": [
                        "Object"
                      ]
                    },
                    "description": "Additional data passed to the request",
                    "name": "data"
                  },
                  "method": {
                    "type": {
                      "names": [
                        "String"
                      ]
                    },
                    "description": "Method to call the URL, e.g. `GET`, `POST`, `PUT`, `DELETE`",
                    "name": "method"
                  }
                }
              }
            ],
            "returns": [
              {
                "type": {
                  "names": [
                    "Promise"
                  ]
                },
                "description": "A promise that resolves with the given payload on success and rejects on failure"
              }
            ],
            "name": "ajax",
            "longname": "ajax",
            "kind": "function",
            "scope": "global",
            "simpleName": "ajax",
            "tables": {
              "arguments": [
                {
                  "0": "name",
                  "1": "type",
                  "3": "description"
                },
                {
                  "0": "url",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "String"
                      ]
                    }
                  },
                  "3": "The URL to call"
                },
                {
                  "0": "options",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "Object"
                      ]
                    }
                  },
                  "3": "Additional options passed to the ajax call",
                  "optional": true
                }
              ],
              "options": [
                {
                  "0": "name",
                  "1": "type",
                  "3": "description"
                },
                {
                  "0": "data",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "Object"
                      ]
                    }
                  },
                  "3": "Additional data passed to the request"
                },
                {
                  "0": "method",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "String"
                      ]
                    }
                  },
                  "3": "Method to call the URL, e.g. `GET`, `POST`, `PUT`, `DELETE`"
                }
              ]
            },
            "extras": {
              "FunctionDeclaration": {
                "meta": {
                  "range": [
                    990,
                    2257
                  ],
                  "lineno": 38,
                  "columnno": 7,
                  "code": {
                    "id": "astnode100000003",
                    "name": "ajax",
                    "type": "FunctionDeclaration",
                    "paramnames": [
                      "url",
                      "options"
                    ]
                  },
                  "vars": {
                    "": null
                  }
                },
                "undocumented": true,
                "name": "ajax",
                "longname": "ajax",
                "kind": "function",
                "scope": "global",
                "params": [
                  {
                    "name": "url"
                  },
                  {
                    "name": "options"
                  }
                ],
                "simpleName": "ajax",
                "tables": {
                  "arguments": [
                    {
                      "0": "name",
                      "1": "type"
                    },
                    {
                      "0": "url",
                      "1": {
                        "template": "types"
                      }
                    },
                    {
                      "0": "options",
                      "1": {
                        "template": "types"
                      }
                    }
                  ]
                }
              }
            }
          },
          "getImage": {
            "meta": {
              "range": [
                2601,
                2819
              ],
              "lineno": 109,
              "columnno": 0,
              "code": {
                "id": "astnode100000194",
                "name": "exports.getImage",
                "type": "FunctionDeclaration",
                "paramnames": [
                  "src"
                ]
              }
            },
            "description": "Load an image asynchronously.",
            "examples": [
              "### Usage\n\n```javascript\nutil.getImage('/path/to/image.jpeg')\n.then(function(img) {\n    console.log(img);\n});\n```\n\n### Result\n\n```html\n<img src=\"/path/to/image.jpeg\">\n```"
            ],
            "params": [
              {
                "type": {
                  "names": [
                    "String"
                  ]
                },
                "description": "url to an image",
                "name": "src"
              }
            ],
            "returns": [
              {
                "type": {
                  "names": [
                    "Promise.<Image, Error>"
                  ]
                },
                "description": "A promise resolving with an Image object"
              }
            ],
            "name": "getImage",
            "longname": "getImage",
            "kind": "function",
            "scope": "global",
            "simpleName": "getImage",
            "tables": {
              "arguments": [
                {
                  "0": "name",
                  "1": "type",
                  "3": "description"
                },
                {
                  "0": "src",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "String"
                      ]
                    }
                  },
                  "3": "url to an image"
                }
              ]
            },
            "extras": {
              "FunctionDeclaration": {
                "meta": {
                  "range": [
                    2608,
                    2819
                  ],
                  "lineno": 109,
                  "columnno": 7,
                  "code": {
                    "id": "astnode100000195",
                    "name": "getImage",
                    "type": "FunctionDeclaration",
                    "paramnames": [
                      "src"
                    ]
                  },
                  "vars": {
                    "": null
                  }
                },
                "undocumented": true,
                "name": "getImage",
                "longname": "getImage",
                "kind": "function",
                "scope": "global",
                "params": [
                  {
                    "name": "src"
                  }
                ],
                "simpleName": "getImage",
                "tables": {
                  "arguments": [
                    {
                      "0": "name",
                      "1": "type"
                    },
                    {
                      "0": "src",
                      "1": {
                        "template": "types"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "HTTP transport tools\nThe following functions are to work with asynchronous tasks. They are used for executing code asynchronously."
      },
      "component": {}
    },
    "packages.uikit-utils.src.ajax.js.md": {
      "readme": "",
      "path": "/Users/jms/doctools/examples/packages/uikit-utils/src/ajax.js.md",
      "type": "markdown",
      "name": "ajax",
      "resource": "packages.uikit-utils.src.ajax.js.md",
      "fileInPackage": "./packages/uikit-utils/src/ajax.js.md",
      "package": "packages.uikit-utils"
    },
    "src.uikit.accordion.js": {
      "assets": {
        "readme": "src.uikit.accordion.js.md"
      },
      "path": "/Users/jms/doctools/examples/src/uikit/accordion.js",
      "type": "UIkitComponent",
      "name": "accordion",
      "resource": "src.uikit.accordion.js",
      "fileInPackage": "./src/uikit/accordion.js",
      "package": "examples",
      "module": {
        "global": {
          "pxcz7h55zunt70q741l5s.js": {
            "meta": {
              "lineno": 6,
              "columnno": 0,
              "code": {}
            },
            "name": "pxcz7h55zunt70q741l5s.js",
            "kind": "file",
            "preserveName": true,
            "type": {
              "names": [
                "UIkitComponent"
              ]
            },
            "longname": "pxcz7h55zunt70q741l5s.js",
            "scope": "global"
          },
          "test": {
            "meta": {
              "range": [
                299,
                326
              ],
              "lineno": 14,
              "columnno": 0,
              "code": {
                "id": "astnode100000010",
                "name": "exports.test",
                "type": "FunctionDeclaration",
                "paramnames": []
              }
            },
            "description": "test",
            "name": "test",
            "longname": "test",
            "kind": "function",
            "scope": "global",
            "simpleName": "test",
            "params": [],
            "tables": {
              "arguments": [
                {}
              ]
            },
            "extras": {
              "FunctionDeclaration": {
                "meta": {
                  "range": [
                    306,
                    326
                  ],
                  "lineno": 14,
                  "columnno": 7,
                  "code": {
                    "id": "astnode100000011",
                    "name": "test",
                    "type": "FunctionDeclaration",
                    "paramnames": []
                  }
                },
                "undocumented": true,
                "name": "test",
                "longname": "test",
                "kind": "function",
                "scope": "global",
                "params": [],
                "simpleName": "test",
                "tables": {
                  "arguments": [
                    {}
                  ]
                }
              }
            }
          },
          "module.exports": {
            "meta": {
              "range": [
                365,
                4426
              ],
              "lineno": 21,
              "columnno": 0,
              "code": {
                "id": "astnode100000014",
                "name": "module.exports",
                "type": "ObjectExpression"
              }
            },
            "description": "an accordion component",
            "name": "exports",
            "longname": "module.exports",
            "kind": "member",
            "memberof": "module",
            "scope": "static",
            "children": {
              "module.exports.props": {
                "meta": {
                  "range": [
                    420,
                    1197
                  ],
                  "lineno": 25,
                  "columnno": 4,
                  "code": {
                    "id": "astnode100000020",
                    "name": "props",
                    "type": "ObjectExpression",
                    "value": "{\"targets\":\"\",\"active\":null,\"collapsible\":\"\",\"multiple\":\"\",\"toggle\":\"\",\"content\":\"\",\"transition\":\"\"}"
                  }
                },
                "undocumented": true,
                "name": "props",
                "longname": "module.exports.props",
                "kind": "member",
                "memberof": "module.exports",
                "scope": "static",
                "children": {
                  "module.exports.props.targets": {
                    "meta": {
                      "range": [
                        515,
                        530
                      ],
                      "lineno": 29,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000022",
                        "name": "targets",
                        "type": "Identifier",
                        "value": "String"
                      }
                    },
                    "description": "CSSo selector of the element(s) to toggle.",
                    "name": "targets",
                    "longname": "module.exports.props.targets",
                    "kind": "member",
                    "memberof": "module.exports.props",
                    "scope": "static",
                    "simpleName": "targets"
                  },
                  "module.exports.props.active": {
                    "meta": {
                      "range": [
                        615,
                        627
                      ],
                      "lineno": 33,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000024",
                        "name": "active",
                        "type": "Literal",
                        "value": null
                      }
                    },
                    "description": "Index of the element to open initially.",
                    "name": "active",
                    "longname": "module.exports.props.active",
                    "kind": "member",
                    "memberof": "module.exports.props",
                    "scope": "static",
                    "simpleName": "active"
                  },
                  "module.exports.props.collapsible": {
                    "meta": {
                      "range": [
                        702,
                        722
                      ],
                      "lineno": 37,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000026",
                        "name": "collapsible",
                        "type": "Identifier",
                        "value": "Boolean"
                      }
                    },
                    "description": "Allow all items to be closed.",
                    "name": "collapsible",
                    "longname": "module.exports.props.collapsible",
                    "kind": "member",
                    "memberof": "module.exports.props",
                    "scope": "static",
                    "simpleName": "collapsible"
                  },
                  "module.exports.props.multiple": {
                    "meta": {
                      "range": [
                        794,
                        811
                      ],
                      "lineno": 41,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000028",
                        "name": "multiple",
                        "type": "Identifier",
                        "value": "Boolean"
                      }
                    },
                    "description": "Allow multiple open items.",
                    "name": "multiple",
                    "longname": "module.exports.props.multiple",
                    "kind": "member",
                    "memberof": "module.exports.props",
                    "scope": "static",
                    "simpleName": "multiple"
                  },
                  "module.exports.props.toggle": {
                    "meta": {
                      "range": [
                        908,
                        922
                      ],
                      "lineno": 45,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000030",
                        "name": "toggle",
                        "type": "Identifier",
                        "value": "String"
                      }
                    },
                    "description": "The toggle selector, which toggles accordion items.",
                    "name": "toggle",
                    "longname": "module.exports.props.toggle",
                    "kind": "member",
                    "memberof": "module.exports.props",
                    "scope": "static",
                    "simpleName": "toggle"
                  },
                  "module.exports.props.content": {
                    "meta": {
                      "range": [
                        1035,
                        1050
                      ],
                      "lineno": 49,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000032",
                        "name": "content",
                        "type": "Identifier",
                        "value": "String"
                      }
                    },
                    "description": "The content selector, which selects the accordion content elements.",
                    "name": "content",
                    "longname": "module.exports.props.content",
                    "kind": "member",
                    "memberof": "module.exports.props",
                    "scope": "static",
                    "simpleName": "content"
                  },
                  "module.exports.props.transition": {
                    "meta": {
                      "range": [
                        1173,
                        1191
                      ],
                      "lineno": 53,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000034",
                        "name": "transition",
                        "type": "Identifier",
                        "value": "String"
                      }
                    },
                    "description": "The transition to use when revealing items. Use keyword for easing functions.",
                    "name": "transition",
                    "longname": "module.exports.props.transition",
                    "kind": "member",
                    "memberof": "module.exports.props",
                    "scope": "static",
                    "simpleName": "transition"
                  }
                }
              },
              "module.exports.computed": {
                "meta": {
                  "range": [
                    1494,
                    1832
                  ],
                  "lineno": 68,
                  "columnno": 4,
                  "code": {
                    "id": "astnode100000057",
                    "name": "computed",
                    "type": "ObjectExpression",
                    "value": "{\"items\":\"\"}"
                  }
                },
                "undocumented": true,
                "name": "computed",
                "longname": "module.exports.computed",
                "kind": "member",
                "memberof": "module.exports",
                "scope": "static",
                "children": {
                  "module.exports.computed.items": {
                    "meta": {
                      "range": [
                        1755,
                        1825
                      ],
                      "lineno": 77,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000059",
                        "name": "items",
                        "type": "FunctionExpression"
                      }
                    },
                    "description": "Items that are inside this accordion",
                    "access": "private",
                    "params": [
                      {
                        "type": {
                          "names": [
                            "Object.target"
                          ]
                        },
                        "name": "param0"
                      },
                      {
                        "type": {
                          "names": [
                            "NodeLike"
                          ]
                        },
                        "name": "$el"
                      },
                      {
                        "name": "{targets}"
                      }
                    ],
                    "returns": [
                      {
                        "type": {
                          "names": [
                            "Array.<NodeLike>"
                          ]
                        },
                        "description": "Returns all nodes insinde this accordion"
                      }
                    ],
                    "name": "items",
                    "longname": "module.exports.computed.items",
                    "kind": "function",
                    "memberof": "module.exports.computed",
                    "scope": "static",
                    "simpleName": "items",
                    "tables": {
                      "arguments": [
                        {
                          "0": "name",
                          "1": "type"
                        },
                        {
                          "0": "param0",
                          "1": {
                            "template": "types",
                            "type": {
                              "names": [
                                "Object.target"
                              ]
                            }
                          }
                        },
                        {
                          "0": "$el",
                          "1": {
                            "template": "types",
                            "type": {
                              "names": [
                                "NodeLike"
                              ]
                            }
                          }
                        },
                        {
                          "0": "{targets}",
                          "1": {
                            "template": "types"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "module.exports.methods": {
                "meta": {
                  "range": [
                    2754,
                    4423
                  ],
                  "lineno": 124,
                  "columnno": 4,
                  "code": {
                    "id": "astnode100000230",
                    "name": "methods",
                    "type": "ObjectExpression",
                    "value": "{\"toggle\":\"\"}"
                  }
                },
                "undocumented": true,
                "name": "methods",
                "longname": "module.exports.methods",
                "kind": "member",
                "memberof": "module.exports",
                "scope": "static",
                "children": {
                  "module.exports.methods.toggle": {
                    "meta": {
                      "range": [
                        2935,
                        4416
                      ],
                      "lineno": 131,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000232",
                        "name": "toggle",
                        "type": "FunctionExpression"
                      },
                      "vars": {
                        "index": "module.exports.methods.toggle~index",
                        "active": "module.exports.methods.toggle~active",
                        "item": "module.exports.methods.toggle~item",
                        "": null
                      }
                    },
                    "description": "the toglle method to open or close accordions programatically",
                    "params": [
                      {
                        "type": {
                          "names": [
                            "NodeLike"
                          ]
                        },
                        "name": "item"
                      },
                      {
                        "type": {
                          "names": [
                            "*"
                          ]
                        },
                        "name": "animate"
                      }
                    ],
                    "name": "toggle",
                    "longname": "module.exports.methods.toggle",
                    "kind": "function",
                    "memberof": "module.exports.methods",
                    "scope": "static",
                    "simpleName": "toggle",
                    "tables": {
                      "arguments": [
                        {
                          "0": "name",
                          "1": "type"
                        },
                        {
                          "0": "item",
                          "1": {
                            "template": "types",
                            "type": {
                              "names": [
                                "NodeLike"
                              ]
                            }
                          }
                        },
                        {
                          "0": "animate",
                          "1": {
                            "template": "types",
                            "type": {
                              "names": [
                                "*"
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "children": {}
                  }
                }
              }
            }
          }
        }
      },
      "component": {
        "props": {
          "targets": {
            "meta": {
              "range": [
                515,
                530
              ],
              "lineno": 29,
              "columnno": 8,
              "code": {
                "id": "astnode100000022",
                "name": "targets",
                "type": "Identifier",
                "value": "String"
              }
            },
            "description": "CSSo selector of the element(s) to toggle.",
            "name": "targets",
            "longname": "module.exports.props.targets",
            "kind": "member",
            "memberof": "module.exports.props",
            "scope": "static",
            "simpleName": "targets"
          },
          "active": {
            "meta": {
              "range": [
                615,
                627
              ],
              "lineno": 33,
              "columnno": 8,
              "code": {
                "id": "astnode100000024",
                "name": "active",
                "type": "Literal",
                "value": null
              }
            },
            "description": "Index of the element to open initially.",
            "name": "active",
            "longname": "module.exports.props.active",
            "kind": "member",
            "memberof": "module.exports.props",
            "scope": "static",
            "simpleName": "active"
          },
          "collapsible": {
            "meta": {
              "range": [
                702,
                722
              ],
              "lineno": 37,
              "columnno": 8,
              "code": {
                "id": "astnode100000026",
                "name": "collapsible",
                "type": "Identifier",
                "value": "Boolean"
              }
            },
            "description": "Allow all items to be closed.",
            "name": "collapsible",
            "longname": "module.exports.props.collapsible",
            "kind": "member",
            "memberof": "module.exports.props",
            "scope": "static",
            "simpleName": "collapsible"
          },
          "multiple": {
            "meta": {
              "range": [
                794,
                811
              ],
              "lineno": 41,
              "columnno": 8,
              "code": {
                "id": "astnode100000028",
                "name": "multiple",
                "type": "Identifier",
                "value": "Boolean"
              }
            },
            "description": "Allow multiple open items.",
            "name": "multiple",
            "longname": "module.exports.props.multiple",
            "kind": "member",
            "memberof": "module.exports.props",
            "scope": "static",
            "simpleName": "multiple"
          },
          "toggle": {
            "meta": {
              "range": [
                908,
                922
              ],
              "lineno": 45,
              "columnno": 8,
              "code": {
                "id": "astnode100000030",
                "name": "toggle",
                "type": "Identifier",
                "value": "String"
              }
            },
            "description": "The toggle selector, which toggles accordion items.",
            "name": "toggle",
            "longname": "module.exports.props.toggle",
            "kind": "member",
            "memberof": "module.exports.props",
            "scope": "static",
            "simpleName": "toggle"
          },
          "content": {
            "meta": {
              "range": [
                1035,
                1050
              ],
              "lineno": 49,
              "columnno": 8,
              "code": {
                "id": "astnode100000032",
                "name": "content",
                "type": "Identifier",
                "value": "String"
              }
            },
            "description": "The content selector, which selects the accordion content elements.",
            "name": "content",
            "longname": "module.exports.props.content",
            "kind": "member",
            "memberof": "module.exports.props",
            "scope": "static",
            "simpleName": "content"
          },
          "transition": {
            "meta": {
              "range": [
                1173,
                1191
              ],
              "lineno": 53,
              "columnno": 8,
              "code": {
                "id": "astnode100000034",
                "name": "transition",
                "type": "Identifier",
                "value": "String"
              }
            },
            "description": "The transition to use when revealing items. Use keyword for easing functions.",
            "name": "transition",
            "longname": "module.exports.props.transition",
            "kind": "member",
            "memberof": "module.exports.props",
            "scope": "static",
            "simpleName": "transition"
          }
        },
        "computed": {
          "items": {
            "meta": {
              "range": [
                1755,
                1825
              ],
              "lineno": 77,
              "columnno": 8,
              "code": {
                "id": "astnode100000059",
                "name": "items",
                "type": "FunctionExpression"
              }
            },
            "description": "Items that are inside this accordion",
            "access": "private",
            "params": [
              {
                "type": {
                  "names": [
                    "Object.target"
                  ]
                },
                "name": "param0"
              },
              {
                "type": {
                  "names": [
                    "NodeLike"
                  ]
                },
                "name": "$el"
              },
              {
                "name": "{targets}"
              }
            ],
            "returns": [
              {
                "type": {
                  "names": [
                    "Array.<NodeLike>"
                  ]
                },
                "description": "Returns all nodes insinde this accordion"
              }
            ],
            "name": "items",
            "longname": "module.exports.computed.items",
            "kind": "function",
            "memberof": "module.exports.computed",
            "scope": "static",
            "simpleName": "items",
            "tables": {
              "arguments": [
                {
                  "0": "name",
                  "1": "type"
                },
                {
                  "0": "param0",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "Object.target"
                      ]
                    }
                  }
                },
                {
                  "0": "$el",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "NodeLike"
                      ]
                    }
                  }
                },
                {
                  "0": "{targets}",
                  "1": {
                    "template": "types"
                  }
                }
              ]
            }
          }
        },
        "methods": {
          "toggle": {
            "meta": {
              "range": [
                2935,
                4416
              ],
              "lineno": 131,
              "columnno": 8,
              "code": {
                "id": "astnode100000232",
                "name": "toggle",
                "type": "FunctionExpression"
              },
              "vars": {
                "index": "module.exports.methods.toggle~index",
                "active": "module.exports.methods.toggle~active",
                "item": "module.exports.methods.toggle~item",
                "": null
              }
            },
            "description": "the toglle method to open or close accordions programatically",
            "params": [
              {
                "type": {
                  "names": [
                    "NodeLike"
                  ]
                },
                "name": "item"
              },
              {
                "type": {
                  "names": [
                    "*"
                  ]
                },
                "name": "animate"
              }
            ],
            "name": "toggle",
            "longname": "module.exports.methods.toggle",
            "kind": "function",
            "memberof": "module.exports.methods",
            "scope": "static",
            "simpleName": "toggle",
            "tables": {
              "arguments": [
                {
                  "0": "name",
                  "1": "type"
                },
                {
                  "0": "item",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "NodeLike"
                      ]
                    }
                  }
                },
                {
                  "0": "animate",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "*"
                      ]
                    }
                  }
                }
              ]
            },
            "children": {}
          }
        },
        "description": "an accordion component"
      }
    },
    "src.uikit.accordion.js.md": {
      "readme": "## usage:\n\nThe Accordion component consists of a parent container with the `uk-accordion` attribute, and a title and content part for each accordion item.\n\n| Class                   | Description                                                                |\n|:------------------------|:---------------------------------------------------------------------------|\n| `.uk-accordion-title`   | Defines and styles the toggle for each accordion item. Use `<a>` elements. |\n| `.uk-accordion-content` | Defines the content part for each accordion item.                          |\n\n```html\n<ul uk-accordion>\n    <li>\n        <a class=\"uk-accordion-title\" href=\"#\"></a>\n        <div class=\"uk-accordion-content\"></div>\n    </li>\n</ul>\n```\n\n```html : uikit\n<ul uk-accordion>\n    <li class=\"uk-open\">\n        <a class=\"uk-accordion-title\" href=\"#\">Item 1</a>\n        <div class=\"uk-accordion-content\">\n            <p>Lez Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n        </div>\n    </li>\n    <li>\n        <a class=\"uk-accordion-title\" href=\"#\">Item 2</a>\n        <div class=\"uk-accordion-content\">\n            <p>Ali enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor reprehenderit.</p>\n        </div>\n    </li>\n    <li>\n        <a class=\"uk-accordion-title\" href=\"#\">Item 3</a>\n        <div class=\"uk-accordion-content\">\n            <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat proident.</p>\n        </div>\n    </li>\n</ul>\n```\n\n***\n\n### No collapsing\n\nBy default, all accordion items can be collapsed. To prevent this behavior and always maintain one open item, add the `collapsible: false` option to the attribute.\n\n```html\n<ul uk-accordion=\"collapsible: false\">...</ul>\n```\n\n```html : uikit\n<ul uk-accordion=\"collapsible: false\">\n    <li>\n        <a class=\"uk-accordion-title\" href=\"#\">Item 1</a>\n        <div class=\"uk-accordion-content\">\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n        </div>\n    </li>\n    <li>\n        <a class=\"uk-accordion-title\" href=\"#\">Item 2</a>\n        <div class=\"uk-accordion-content\">\n            <p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor reprehenderit.</p>\n        </div>\n    </li>\n    <li>\n        <a class=\"uk-accordion-title\" href=\"#\">Item 3</a>\n        <div class=\"uk-accordion-content\">\n            <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat proident.</p>\n        </div>\n    </li>\n</ul>\n```\n\n***\n\n### Multiple open items\n\nTo display multiple content sections at the same time without one collapsing when the other one is opened, add the `multiple: true` option to the `uk-accordion` attribute.\n\n```html\n<ul uk-accordion=\"multiple: true\">...</ul>\n```\n\n```html : uikit\n<ul uk-accordion=\"multiple: true\">\n    <li class=\"uk-open\">\n        <a class=\"uk-accordion-title\" href=\"#\">Item 1</a>\n        <div class=\"uk-accordion-content\">\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n        </div>\n    </li>\n    <li>\n        <a class=\"uk-accordion-title\" href=\"#\">Item 2</a>\n        <div class=\"uk-accordion-content\">\n            <p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor reprehenderit.</p>\n        </div>\n    </li>\n    <li>\n        <a class=\"uk-accordion-title\" href=\"#\">Item 3</a>\n        <div class=\"uk-accordion-content\">\n            <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat proident.</p>\n        </div>\n    </li>\n</ul>\n```\n\n***\n\n### Set open items\n\nTo specify which items should be opened initially, add the `.uk-open` class to the item. You can also use this to open multiple items. Just make sure to add the option `multiple: true` to the `uk-accordion` attribute.\n\n**Note** Alternatively, you can open a single item by adding the `active: <index>` option to the `uk-accordion` attribute, e.g. `active: 1` to show the second element (the index is zero-based). Note that this will overwrite the `uk-open` class.\n\n```html\n<ul uk-accordion>\n    <li></li>\n    <li class=\"uk-open\"></li>\n    <li></li>\n</ul>\n```\n\n```html : uikit\n<ul uk-accordion>\n    <li>\n        <a class=\"uk-accordion-title\" href=\"#\">Item 1</a>\n        <div class=\"uk-accordion-content\">\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n        </div>\n    </li>\n    <li class=\"uk-open\">\n        <a class=\"uk-accordion-title\" href=\"#\">Item 2</a>\n        <div class=\"uk-accordion-content\">\n            <p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor reprehenderit.</p>\n        </div>\n    </li>\n    <li>\n        <a class=\"uk-accordion-title\" href=\"#\">Item 3</a>\n        <div class=\"uk-accordion-content\">\n            <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat proident.</p>\n        </div>\n    </li>\n</ul>\n```\n",
      "path": "/Users/jms/doctools/examples/src/uikit/accordion.js.md",
      "type": "markdown",
      "name": "accordion",
      "resource": "src.uikit.accordion.js.md",
      "fileInPackage": "./src/uikit/accordion.js.md",
      "package": "examples"
    },
    "src.uikit.togglable.js": {
      "path": "/Users/jms/doctools/examples/src/uikit/togglable.js",
      "type": "UIkitComponent",
      "name": "togglable",
      "resource": "src.uikit.togglable.js",
      "fileInPackage": "./src/uikit/togglable.js",
      "package": "examples",
      "module": {
        "global": {
          "cg67yclhkykrjripej1pnc.js": {
            "meta": {
              "lineno": 5,
              "columnno": 0,
              "code": {}
            },
            "name": "cg67yclhkykrjripej1pnc.js",
            "kind": "readme\n\nthe toggleable can be explained in depth here!",
            "preserveName": true,
            "longname": "cg67yclhkykrjripej1pnc.js",
            "scope": "global",
            "extras": {
              "undefined": {
                "meta": {
                  "lineno": 12,
                  "columnno": 0,
                  "code": {}
                },
                "description": "the greated component",
                "name": "cg67yclhkykrjripej1pnc.js",
                "kind": "file",
                "preserveName": true,
                "type": {
                  "names": [
                    "UIkitComponent"
                  ]
                },
                "longname": "cg67yclhkykrjripej1pnc.js",
                "scope": "global"
              }
            }
          },
          "module.exports": {
            "meta": {
              "range": [
                438,
                7058
              ],
              "lineno": 21,
              "columnno": 0,
              "code": {
                "id": "astnode100000002",
                "name": "module.exports",
                "type": "ObjectExpression"
              }
            },
            "description": "a great compnent",
            "name": "exports",
            "longname": "module.exports",
            "kind": "member",
            "memberof": "module",
            "scope": "static",
            "children": {
              "module.exports.props": {
                "meta": {
                  "range": [
                    460,
                    1022
                  ],
                  "lineno": 23,
                  "columnno": 4,
                  "code": {
                    "id": "astnode100000004",
                    "name": "props",
                    "type": "ObjectExpression",
                    "value": "{\"cls\":\"\",\"animation\":\"list\",\"duration\":\"\",\"origin\":\"\",\"transition\":\"\",\"queued\":\"\"}"
                  }
                },
                "undocumented": true,
                "name": "props",
                "longname": "module.exports.props",
                "kind": "member",
                "memberof": "module.exports",
                "scope": "static",
                "children": {
                  "module.exports.props.cls": {
                    "meta": {
                      "range": [
                        579,
                        591
                      ],
                      "lineno": 27,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000006",
                        "name": "cls",
                        "type": "Identifier",
                        "value": "Boolean"
                      }
                    },
                    "description": "The class that is being toggled. Defaults to the hidden attribute.",
                    "name": "cls",
                    "longname": "module.exports.props.cls",
                    "kind": "member",
                    "memberof": "module.exports.props",
                    "scope": "static",
                    "simpleName": "cls"
                  },
                  "module.exports.props.animation": {
                    "meta": {
                      "range": [
                        679,
                        696
                      ],
                      "lineno": 31,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000008",
                        "name": "animation",
                        "type": "Literal",
                        "value": "list"
                      }
                    },
                    "description": "Reveal item directly or with a transition.",
                    "name": "animation",
                    "longname": "module.exports.props.animation",
                    "kind": "member",
                    "memberof": "module.exports.props",
                    "scope": "static",
                    "simpleName": "animation"
                  },
                  "module.exports.props.duration": {
                    "meta": {
                      "range": [
                        777,
                        793
                      ],
                      "lineno": 35,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000010",
                        "name": "duration",
                        "type": "Identifier",
                        "value": "Number"
                      }
                    },
                    "description": "Animation duration in milliseconds.",
                    "name": "duration",
                    "longname": "module.exports.props.duration",
                    "kind": "member",
                    "memberof": "module.exports.props",
                    "scope": "static",
                    "simpleName": "duration"
                  },
                  "module.exports.props.origin": {
                    "meta": {
                      "range": [
                        846,
                        860
                      ],
                      "lineno": 39,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000012",
                        "name": "origin",
                        "type": "Identifier",
                        "value": "String"
                      }
                    },
                    "description": "missing",
                    "name": "origin",
                    "longname": "module.exports.props.origin",
                    "kind": "member",
                    "memberof": "module.exports.props",
                    "scope": "static",
                    "simpleName": "origin"
                  },
                  "module.exports.props.transition": {
                    "meta": {
                      "range": [
                        905,
                        923
                      ],
                      "lineno": 43,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000014",
                        "name": "transition",
                        "type": "Identifier",
                        "value": "String"
                      }
                    },
                    "name": "transition",
                    "longname": "module.exports.props.transition",
                    "kind": "member",
                    "memberof": "module.exports.props",
                    "scope": "static",
                    "simpleName": "transition"
                  },
                  "module.exports.props.queued": {
                    "meta": {
                      "range": [
                        1001,
                        1016
                      ],
                      "lineno": 47,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000016",
                        "name": "queued",
                        "type": "Identifier",
                        "value": "Boolean"
                      }
                    },
                    "description": "Toggle the targets successively.",
                    "name": "queued",
                    "longname": "module.exports.props.queued",
                    "kind": "member",
                    "memberof": "module.exports.props",
                    "scope": "static",
                    "simpleName": "queued"
                  }
                }
              }
            }
          }
        },
        "description": "the greated component"
      },
      "component": {
        "props": {
          "cls": {
            "meta": {
              "range": [
                579,
                591
              ],
              "lineno": 27,
              "columnno": 8,
              "code": {
                "id": "astnode100000006",
                "name": "cls",
                "type": "Identifier",
                "value": "Boolean"
              }
            },
            "description": "The class that is being toggled. Defaults to the hidden attribute.",
            "name": "cls",
            "longname": "module.exports.props.cls",
            "kind": "member",
            "memberof": "module.exports.props",
            "scope": "static",
            "simpleName": "cls"
          },
          "animation": {
            "meta": {
              "range": [
                679,
                696
              ],
              "lineno": 31,
              "columnno": 8,
              "code": {
                "id": "astnode100000008",
                "name": "animation",
                "type": "Literal",
                "value": "list"
              }
            },
            "description": "Reveal item directly or with a transition.",
            "name": "animation",
            "longname": "module.exports.props.animation",
            "kind": "member",
            "memberof": "module.exports.props",
            "scope": "static",
            "simpleName": "animation"
          },
          "duration": {
            "meta": {
              "range": [
                777,
                793
              ],
              "lineno": 35,
              "columnno": 8,
              "code": {
                "id": "astnode100000010",
                "name": "duration",
                "type": "Identifier",
                "value": "Number"
              }
            },
            "description": "Animation duration in milliseconds.",
            "name": "duration",
            "longname": "module.exports.props.duration",
            "kind": "member",
            "memberof": "module.exports.props",
            "scope": "static",
            "simpleName": "duration"
          },
          "origin": {
            "meta": {
              "range": [
                846,
                860
              ],
              "lineno": 39,
              "columnno": 8,
              "code": {
                "id": "astnode100000012",
                "name": "origin",
                "type": "Identifier",
                "value": "String"
              }
            },
            "description": "missing",
            "name": "origin",
            "longname": "module.exports.props.origin",
            "kind": "member",
            "memberof": "module.exports.props",
            "scope": "static",
            "simpleName": "origin"
          },
          "transition": {
            "meta": {
              "range": [
                905,
                923
              ],
              "lineno": 43,
              "columnno": 8,
              "code": {
                "id": "astnode100000014",
                "name": "transition",
                "type": "Identifier",
                "value": "String"
              }
            },
            "name": "transition",
            "longname": "module.exports.props.transition",
            "kind": "member",
            "memberof": "module.exports.props",
            "scope": "static",
            "simpleName": "transition"
          },
          "queued": {
            "meta": {
              "range": [
                1001,
                1016
              ],
              "lineno": 47,
              "columnno": 8,
              "code": {
                "id": "astnode100000016",
                "name": "queued",
                "type": "Identifier",
                "value": "Boolean"
              }
            },
            "description": "Toggle the targets successively.",
            "name": "queued",
            "longname": "module.exports.props.queued",
            "kind": "member",
            "memberof": "module.exports.props",
            "scope": "static",
            "simpleName": "queued"
          }
        },
        "description": "a great compnent"
      }
    },
    "src.uikit.types.js": {
      "path": "/Users/jms/doctools/examples/src/uikit/types.js",
      "type": "module",
      "name": "types",
      "resource": "src.uikit.types.js",
      "fileInPackage": "./src/uikit/types.js",
      "package": "examples",
      "module": {
        "global": {
          "c": {
            "meta": {
              "lineno": 1,
              "columnno": 0,
              "code": {}
            },
            "description": "nodelike is a type like jQuery",
            "name": "c",
            "kind": "typedef",
            "preserveName": true,
            "type": {
              "names": [
                "NodeLike"
              ]
            },
            "longname": "c",
            "scope": "global"
          },
          "h5xjfqb2v3fjwmll4j6jy.js": {
            "meta": {
              "lineno": 8,
              "columnno": 0,
              "code": {}
            },
            "description": "a simple integer type",
            "name": "h5xjfqb2v3fjwmll4j6jy.js",
            "kind": "typedef",
            "preserveName": true,
            "type": {
              "names": [
                "Integer"
              ]
            },
            "longname": "h5xjfqb2v3fjwmll4j6jy.js",
            "scope": "global"
          },
          "a": {
            "meta": {
              "lineno": 15,
              "columnno": 0,
              "code": {}
            },
            "description": "a vue VM",
            "name": "a",
            "kind": "typedef",
            "preserveName": true,
            "type": {
              "names": [
                "VueComponentInstance"
              ]
            },
            "longname": "a",
            "scope": "global"
          }
        }
      },
      "component": {}
    },
    "src.utils.animation.js": {
      "path": "/Users/jms/doctools/examples/src/utils/animation.js",
      "type": "module",
      "name": "animation",
      "resource": "src.utils.animation.js",
      "fileInPackage": "./src/utils/animation.js",
      "package": "examples",
      "module": {
        "global": {
          "transition": {
            "meta": {
              "range": [
                1354,
                2644
              ],
              "lineno": 47,
              "columnno": 0,
              "code": {
                "id": "astnode100000002",
                "name": "exports.transition",
                "type": "FunctionDeclaration",
                "paramnames": [
                  "element",
                  "props",
                  "duration",
                  "timing"
                ]
              }
            },
            "description": "Transition a CSS value.\n**Note** Before starting a transition, a value for the CSS property to be transitioned has to be present!",
            "examples": [
              "### Usage\n\n```html\n<div id=\"example\" class=\"uk-card uk-card-primary uk-card-body\">Primary Card</div>\n```\n\n```javascript\nvar element = util.$('#example');\n\n// Transition a CSS property to a certain value\nutil.transition(element, { 'opacity': 0 })\n  .then(console.log('Card was faded out!'));\n```\n\n#### Result\n\n```log\nCard was faded out!\n```"
            ],
            "params": [
              {
                "type": {
                  "names": [
                    "NodeLike"
                  ]
                },
                "description": "The element",
                "name": "element"
              },
              {
                "type": {
                  "names": [
                    "Object"
                  ]
                },
                "description": "The CSS properties to be changed",
                "name": "props"
              },
              {
                "type": {
                  "names": [
                    "Number"
                  ]
                },
                "optional": true,
                "defaultvalue": 400,
                "description": "The transition's duration (in milliseconds)",
                "name": "duration"
              },
              {
                "type": {
                  "names": [
                    "String"
                  ]
                },
                "optional": true,
                "defaultvalue": "'linear'",
                "description": "Timing functions, e.g. `linear`, `ease`, `ease-in`, `ease-out`, `ease-in-out`",
                "name": "timing"
              }
            ],
            "returns": [
              {
                "type": {
                  "names": [
                    "Promise"
                  ]
                },
                "description": "A promise that resolves when the transition finishes"
              }
            ],
            "name": "transition",
            "longname": "transition",
            "kind": "function",
            "scope": "global",
            "simpleName": "transition",
            "tables": {
              "arguments": [
                {
                  "0": "name",
                  "1": "type",
                  "2": "default",
                  "3": "description"
                },
                {
                  "0": "element",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "NodeLike"
                      ]
                    }
                  },
                  "3": "The element"
                },
                {
                  "0": "props",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "Object"
                      ]
                    }
                  },
                  "3": "The CSS properties to be changed"
                },
                {
                  "0": "duration",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "Number"
                      ]
                    }
                  },
                  "2": 400,
                  "3": "The transition's duration (in milliseconds)",
                  "optional": true
                },
                {
                  "0": "timing",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "String"
                      ]
                    }
                  },
                  "2": "'linear'",
                  "3": "Timing functions, e.g. `linear`, `ease`, `ease-in`, `ease-out`, `ease-in-out`",
                  "optional": true
                }
              ]
            },
            "extras": {
              "FunctionDeclaration": {
                "meta": {
                  "range": [
                    1361,
                    2644
                  ],
                  "lineno": 47,
                  "columnno": 7,
                  "code": {
                    "id": "astnode100000003",
                    "name": "transition",
                    "type": "FunctionDeclaration",
                    "paramnames": [
                      "element",
                      "props",
                      "duration",
                      "timing"
                    ]
                  },
                  "vars": {
                    "": null
                  }
                },
                "undocumented": true,
                "name": "transition",
                "longname": "transition",
                "kind": "function",
                "scope": "global",
                "params": [
                  {
                    "name": "element"
                  },
                  {
                    "name": "props"
                  },
                  {
                    "name": "duration",
                    "defaultvalue": "400"
                  },
                  {
                    "name": "timing",
                    "defaultvalue": "'linear'"
                  }
                ],
                "simpleName": "transition",
                "tables": {
                  "arguments": [
                    {
                      "0": "name",
                      "1": "type",
                      "2": "default"
                    },
                    {
                      "0": "element",
                      "1": {
                        "template": "types"
                      }
                    },
                    {
                      "0": "props",
                      "1": {
                        "template": "types"
                      }
                    },
                    {
                      "0": "duration",
                      "1": {
                        "template": "types"
                      },
                      "2": "400"
                    },
                    {
                      "0": "timing",
                      "1": {
                        "template": "types"
                      },
                      "2": "'linear'"
                    }
                  ]
                }
              }
            }
          },
          "Transition": {
            "meta": {
              "range": [
                2718,
                3232
              ],
              "lineno": 87,
              "columnno": 0,
              "code": {
                "id": "astnode100000149",
                "name": "exports.Transition",
                "type": "VariableDeclaration"
              }
            },
            "description": "The Transition object makes four handy functions accessible.",
            "name": "Transition",
            "longname": "Transition",
            "kind": "constant",
            "scope": "global",
            "extras": {
              "VariableDeclaration": {
                "meta": {
                  "range": [
                    2731,
                    3231
                  ],
                  "lineno": 87,
                  "columnno": 13,
                  "code": {
                    "id": "astnode100000151",
                    "name": "Transition",
                    "type": "ObjectExpression",
                    "value": "{\"start\":\"\",\"stop\":\"\",\"cancel\":\"\",\"inProgress\":\"\"}"
                  }
                },
                "undocumented": true,
                "name": "Transition",
                "longname": "Transition",
                "kind": "constant",
                "scope": "global",
                "params": []
              }
            },
            "children": {
              "Transition.start": {
                "meta": {
                  "range": [
                    2840,
                    2857
                  ],
                  "lineno": 94,
                  "columnno": 4,
                  "code": {
                    "id": "astnode100000154",
                    "name": "start",
                    "type": "Identifier",
                    "value": "transition"
                  }
                },
                "description": "alias for transition",
                "kind": "function",
                "see": [
                  "transition"
                ],
                "name": "start",
                "longname": "Transition.start",
                "memberof": "Transition",
                "scope": "static",
                "reference": "transition",
                "simpleName": "Transition.start",
                "params": [],
                "tables": {
                  "arguments": [
                    {}
                  ]
                }
              },
              "Transition.stop": {
                "meta": {
                  "range": [
                    2967,
                    3065
                  ],
                  "lineno": 100,
                  "columnno": 4,
                  "code": {
                    "id": "astnode100000156",
                    "name": "stop",
                    "type": "FunctionExpression"
                  }
                },
                "params": [
                  {
                    "type": {
                      "names": [
                        "Element"
                      ]
                    },
                    "description": "the alement to wait for a transiton to end on",
                    "name": "element"
                  }
                ],
                "name": "stop",
                "longname": "Transition.stop",
                "kind": "function",
                "memberof": "Transition",
                "scope": "static",
                "simpleName": "Transition.stop",
                "tables": {
                  "arguments": [
                    {
                      "0": "name",
                      "1": "type",
                      "3": "description"
                    },
                    {
                      "0": "element",
                      "1": {
                        "template": "types",
                        "type": {
                          "names": [
                            "Element"
                          ]
                        }
                      },
                      "3": "the alement to wait for a transiton to end on"
                    }
                  ]
                }
              }
            }
          },
          "animate": {
            "meta": {
              "range": [
                3450,
                5393
              ],
              "lineno": 126,
              "columnno": 0,
              "code": {
                "id": "astnode100000196",
                "name": "exports.animate",
                "type": "FunctionDeclaration",
                "paramnames": [
                  "element",
                  "animation",
                  "duration",
                  "origin",
                  "out"
                ]
              }
            },
            "description": "test",
            "params": [
              {
                "type": {
                  "names": [
                    "*"
                  ]
                },
                "name": "element"
              },
              {
                "type": {
                  "names": [
                    "*"
                  ]
                },
                "name": "animation"
              },
              {
                "type": {
                  "names": [
                    "*"
                  ]
                },
                "name": "duration",
                "defaultvalue": "200",
                "optional": true
              },
              {
                "type": {
                  "names": [
                    "*"
                  ]
                },
                "name": "origin"
              },
              {
                "type": {
                  "names": [
                    "*"
                  ]
                },
                "name": "out"
              }
            ],
            "name": "animate",
            "longname": "animate",
            "kind": "function",
            "scope": "global",
            "simpleName": "animate",
            "tables": {
              "arguments": [
                {
                  "0": "name",
                  "1": "type",
                  "2": "default"
                },
                {
                  "0": "element",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "*"
                      ]
                    }
                  }
                },
                {
                  "0": "animation",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "*"
                      ]
                    }
                  }
                },
                {
                  "0": "duration",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "*"
                      ]
                    }
                  },
                  "2": "200",
                  "optional": true
                },
                {
                  "0": "origin",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "*"
                      ]
                    }
                  }
                },
                {
                  "0": "out",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "*"
                      ]
                    }
                  }
                }
              ]
            },
            "extras": {
              "FunctionDeclaration": {
                "meta": {
                  "range": [
                    3457,
                    5393
                  ],
                  "lineno": 126,
                  "columnno": 7,
                  "code": {
                    "id": "astnode100000197",
                    "name": "animate",
                    "type": "FunctionDeclaration",
                    "paramnames": [
                      "element",
                      "animation",
                      "duration",
                      "origin",
                      "out"
                    ]
                  },
                  "vars": {
                    "": null
                  }
                },
                "undocumented": true,
                "name": "animate",
                "longname": "animate",
                "kind": "function",
                "scope": "global",
                "params": [
                  {
                    "name": "element"
                  },
                  {
                    "name": "animation"
                  },
                  {
                    "name": "duration",
                    "defaultvalue": "200"
                  },
                  {
                    "name": "origin"
                  },
                  {
                    "name": "out"
                  }
                ],
                "simpleName": "animate",
                "tables": {
                  "arguments": [
                    {
                      "0": "name",
                      "1": "type",
                      "2": "default"
                    },
                    {
                      "0": "element",
                      "1": {
                        "template": "types"
                      }
                    },
                    {
                      "0": "animation",
                      "1": {
                        "template": "types"
                      }
                    },
                    {
                      "0": "duration",
                      "1": {
                        "template": "types"
                      },
                      "2": "200"
                    },
                    {
                      "0": "origin",
                      "1": {
                        "template": "types"
                      }
                    },
                    {
                      "0": "out",
                      "1": {
                        "template": "types"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "component": {}
    },
    "src.vue.Container.vue": {
      "path": "/Users/jms/doctools/examples/src/vue/Container.vue",
      "type": "VueComponent",
      "name": "Container",
      "resource": "src.vue.Container.vue",
      "fileInPackage": "./src/vue/Container.vue",
      "package": "examples",
      "module": {
        "global": {
          "test": {
            "meta": {
              "lineno": 11,
              "columnno": 8,
              "code": {}
            },
            "kind": "Trigger",
            "name": "test",
            "params": [
              {
                "type": {
                  "names": [
                    "String"
                  ]
                },
                "description": "parameter a",
                "name": "a"
              }
            ],
            "longname": "test",
            "scope": "global"
          }
        }
      },
      "component": {}
    },
    "src.vue.Element.vue": {
      "path": "/Users/jms/doctools/examples/src/vue/Element.vue",
      "type": "VueComponent",
      "name": "Element",
      "resource": "src.vue.Element.vue",
      "fileInPackage": "./src/vue/Element.vue",
      "package": "examples",
      "module": {
        "global": {
          "module.exports": {
            "meta": {
              "range": [
                173,
                1175
              ],
              "lineno": 8,
              "columnno": 0,
              "code": {
                "id": "astnode100000008",
                "name": "module.exports",
                "type": "ObjectExpression"
              }
            },
            "description": "An Element represents an Element in the layout-editor of the Builder.\nIt implicitly extends `Node`.",
            "augments": [
              "Node"
            ],
            "name": "exports",
            "longname": "module.exports",
            "kind": "member",
            "memberof": "module",
            "scope": "static",
            "children": {
              "module.exports.computed": {
                "meta": {
                  "range": [
                    195,
                    382
                  ],
                  "lineno": 10,
                  "columnno": 4,
                  "code": {
                    "id": "astnode100000010",
                    "name": "computed",
                    "type": "ObjectExpression",
                    "value": "{\"nodeId\":\"\"}"
                  }
                },
                "undocumented": true,
                "name": "computed",
                "longname": "module.exports.computed",
                "kind": "member",
                "memberof": "module.exports",
                "scope": "static",
                "children": {
                  "module.exports.computed.nodeId": {
                    "meta": {
                      "range": [
                        319,
                        376
                      ],
                      "lineno": 15,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000012",
                        "name": "nodeId",
                        "type": "FunctionExpression"
                      }
                    },
                    "description": "The uniquie continous ID if this component",
                    "type": {
                      "names": [
                        "Number"
                      ]
                    },
                    "name": "nodeId",
                    "longname": "module.exports.computed.nodeId",
                    "kind": "function",
                    "memberof": "module.exports.computed",
                    "scope": "static",
                    "simpleName": "nodeId",
                    "params": [],
                    "tables": {
                      "arguments": [
                        {}
                      ]
                    }
                  }
                }
              },
              "module.exports.methods": {
                "meta": {
                  "range": [
                    389,
                    1171
                  ],
                  "lineno": 20,
                  "columnno": 4,
                  "code": {
                    "id": "astnode100000022",
                    "name": "methods",
                    "type": "ObjectExpression",
                    "value": "{\"findId\":\"\"}"
                  }
                },
                "undocumented": true,
                "name": "methods",
                "longname": "module.exports.methods",
                "kind": "member",
                "memberof": "module.exports",
                "scope": "static",
                "children": {
                  "module.exports.methods.findId": {
                    "meta": {
                      "range": [
                        733,
                        1164
                      ],
                      "lineno": 29,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000024",
                        "name": "findId",
                        "type": "FunctionExpression"
                      },
                      "vars": {
                        "found": "module.exports.methods.findId~found",
                        "": null
                      }
                    },
                    "description": "Determines the uniquie Id for this component",
                    "returns": [
                      {
                        "type": {
                          "names": [
                            "Object"
                          ]
                        },
                        "description": "Returns the id of this component"
                      }
                    ],
                    "access": "private",
                    "params": [
                      {
                        "type": {
                          "names": [
                            "Node"
                          ]
                        },
                        "optional": true,
                        "defaultvalue": "this.builder.layout",
                        "description": "The root node to start counting from",
                        "name": "root"
                      },
                      {
                        "type": {
                          "names": [
                            "Integer"
                          ]
                        },
                        "optional": true,
                        "defaultvalue": 1,
                        "description": "The ID to start counting from",
                        "name": "id"
                      }
                    ],
                    "name": "findId",
                    "longname": "module.exports.methods.findId",
                    "kind": "function",
                    "memberof": "module.exports.methods",
                    "scope": "static",
                    "simpleName": "findId",
                    "tables": {
                      "arguments": [
                        {
                          "0": "name",
                          "1": "type",
                          "2": "default",
                          "3": "description"
                        },
                        {
                          "0": "root",
                          "1": {
                            "template": "types",
                            "type": {
                              "names": [
                                "Node"
                              ]
                            }
                          },
                          "2": "this.builder.layout",
                          "3": "The root node to start counting from",
                          "optional": true
                        },
                        {
                          "0": "id",
                          "1": {
                            "template": "types",
                            "type": {
                              "names": [
                                "Integer"
                              ]
                            }
                          },
                          "2": 1,
                          "3": "The ID to start counting from",
                          "optional": true
                        }
                      ]
                    },
                    "children": {}
                  }
                }
              }
            }
          }
        }
      },
      "component": {
        "computed": {
          "nodeId": {
            "meta": {
              "range": [
                319,
                376
              ],
              "lineno": 15,
              "columnno": 8,
              "code": {
                "id": "astnode100000012",
                "name": "nodeId",
                "type": "FunctionExpression"
              }
            },
            "description": "The uniquie continous ID if this component",
            "type": {
              "names": [
                "Number"
              ]
            },
            "name": "nodeId",
            "longname": "module.exports.computed.nodeId",
            "kind": "function",
            "memberof": "module.exports.computed",
            "scope": "static",
            "simpleName": "nodeId",
            "params": [],
            "tables": {
              "arguments": [
                {}
              ]
            }
          }
        },
        "methods": {
          "findId": {
            "meta": {
              "range": [
                733,
                1164
              ],
              "lineno": 29,
              "columnno": 8,
              "code": {
                "id": "astnode100000024",
                "name": "findId",
                "type": "FunctionExpression"
              },
              "vars": {
                "found": "module.exports.methods.findId~found",
                "": null
              }
            },
            "description": "Determines the uniquie Id for this component",
            "returns": [
              {
                "type": {
                  "names": [
                    "Object"
                  ]
                },
                "description": "Returns the id of this component"
              }
            ],
            "access": "private",
            "params": [
              {
                "type": {
                  "names": [
                    "Node"
                  ]
                },
                "optional": true,
                "defaultvalue": "this.builder.layout",
                "description": "The root node to start counting from",
                "name": "root"
              },
              {
                "type": {
                  "names": [
                    "Integer"
                  ]
                },
                "optional": true,
                "defaultvalue": 1,
                "description": "The ID to start counting from",
                "name": "id"
              }
            ],
            "name": "findId",
            "longname": "module.exports.methods.findId",
            "kind": "function",
            "memberof": "module.exports.methods",
            "scope": "static",
            "simpleName": "findId",
            "tables": {
              "arguments": [
                {
                  "0": "name",
                  "1": "type",
                  "2": "default",
                  "3": "description"
                },
                {
                  "0": "root",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "Node"
                      ]
                    }
                  },
                  "2": "this.builder.layout",
                  "3": "The root node to start counting from",
                  "optional": true
                },
                {
                  "0": "id",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "Integer"
                      ]
                    }
                  },
                  "2": 1,
                  "3": "The ID to start counting from",
                  "optional": true
                }
              ]
            },
            "children": {}
          }
        },
        "description": "An Element represents an Element in the layout-editor of the Builder.\nIt implicitly extends `Node`.",
        "trigger": {
          "elementHover": {
            "comment": "<!-- @trigger elementHover triggered when an element in the layout editor is hovered-->",
            "kind": "trigger",
            "type": {
              "names": [
                null
              ]
            },
            "name": "elementHover",
            "description": "triggered when an element in the layout editor is hovered",
            "params": [],
            "resource": "src.vue.Element.vue",
            "template": "function",
            "simpleName": "elementHover",
            "tables": {
              "arguments": [
                {}
              ]
            }
          },
          "elementLeave": {
            "comment": "<!-- @trigger elementLeave triggered when the mouse leaves a layout editor element -->",
            "kind": "trigger",
            "type": {
              "names": [
                null
              ]
            },
            "name": "elementLeave",
            "description": "triggered when the mouse leaves a layout editor element",
            "params": [],
            "resource": "src.vue.Element.vue",
            "template": "function",
            "simpleName": "elementLeave",
            "tables": {
              "arguments": [
                {}
              ]
            }
          },
          "saveElement": {
            "comment": "<!-- @trigger saveElement triggered when the save save button is clicked -->",
            "kind": "trigger",
            "type": {
              "names": [
                null
              ]
            },
            "name": "saveElement",
            "description": "triggered when the save save button is clicked",
            "params": [],
            "resource": "src.vue.Element.vue",
            "template": "function",
            "simpleName": "saveElement",
            "tables": {
              "arguments": [
                {}
              ]
            }
          }
        }
      }
    },
    "src.vue.Modal.vue": {
      "readme": "\nI can write as much as I want here because this block is called \"readme\"\n\n```run:vue\n\n<template>\n    <div>{{test}}</div>\n</template>\n<script>\nexport default {\n    computed: {\n        test() {\n            return 'tested!';\n        },\n        created() {\n            console.log('example created');\n        }\n    }\n}\n</script>\n\n```\n\nThis is a real example that uses the actual code:\n\n```run:vue\n<template>\n    <div>\n        <Modal ref=\"modal\">{{test}}</Modal>\n        <button @click=\"$refs.modal.open()\">open motal</button>\n    </div>\n</template>\n<script>\nexport default {\n    computed: {\n        test() {\n            return 'tested here!';\n        },\n        created() {\n            console.log('example created');\n        }\n    }\n}\n</script>\n\n```\n\nmore text\n",
      "path": "/Users/jms/doctools/examples/src/vue/Modal.vue",
      "type": "VueComponent",
      "name": "Modal",
      "resource": "src.vue.Modal.vue",
      "fileInPackage": "./src/vue/Modal.vue",
      "package": "examples",
      "module": {
        "global": {
          "module.exports": {
            "meta": {
              "range": [
                143,
                3830
              ],
              "lineno": 8,
              "columnno": 0,
              "code": {
                "id": "astnode100000006",
                "name": "module.exports",
                "type": "ObjectExpression"
              }
            },
            "description": "Reusable modal component using UIkit.modal and VUE. Rad!",
            "examples": [
              "<Modal><ChilComponent/></Modal>"
            ],
            "name": "exports",
            "longname": "module.exports",
            "kind": "member",
            "memberof": "module",
            "scope": "static",
            "children": {
              "module.exports.props": {
                "meta": {
                  "range": [
                    165,
                    919
                  ],
                  "lineno": 10,
                  "columnno": 4,
                  "code": {
                    "id": "astnode100000008",
                    "name": "props",
                    "type": "ObjectExpression",
                    "value": "{\"props\":\"\",\"test\":\"\",\"content\":\"\",\"width\":\"\",\"container\":\"\"}"
                  }
                },
                "undocumented": true,
                "name": "props",
                "longname": "module.exports.props",
                "kind": "member",
                "memberof": "module.exports",
                "scope": "static",
                "children": {
                  "module.exports.props.props": {
                    "meta": {
                      "range": [
                        407,
                        479
                      ],
                      "lineno": 16,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000010",
                        "name": "props",
                        "type": "ObjectExpression",
                        "value": "{\"type\":\"\",\"required\":false}"
                      }
                    },
                    "description": "When using the modal with a content component, you can pass the child's component properties here",
                    "examples": [
                      "<Modal :props=\"{type:'checkbox'}\" :content=\"InputConpnent\"/>"
                    ],
                    "name": "props",
                    "longname": "module.exports.props.props",
                    "kind": "member",
                    "memberof": "module.exports.props",
                    "scope": "static",
                    "children": {},
                    "simpleName": "props"
                  },
                  "module.exports.props.test": {
                    "meta": {
                      "range": [
                        541,
                        553
                      ],
                      "lineno": 24,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000016",
                        "name": "test",
                        "type": "Identifier",
                        "value": "String"
                      }
                    },
                    "description": "a test property",
                    "name": "test",
                    "longname": "module.exports.props.test",
                    "kind": "member",
                    "memberof": "module.exports.props",
                    "scope": "static",
                    "simpleName": "test"
                  },
                  "module.exports.props.content": {
                    "meta": {
                      "range": [
                        656,
                        671
                      ],
                      "lineno": 29,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000018",
                        "name": "content",
                        "type": "Identifier",
                        "value": "Object"
                      }
                    },
                    "description": "A component descriptor to construct a child element from",
                    "name": "content",
                    "longname": "module.exports.props.content",
                    "kind": "member",
                    "memberof": "module.exports.props",
                    "scope": "static",
                    "simpleName": "content"
                  },
                  "module.exports.props.width": {
                    "meta": {
                      "range": [
                        772,
                        815
                      ],
                      "lineno": 34,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000020",
                        "name": "width",
                        "type": "ObjectExpression",
                        "value": "{\"type\":\"\"}"
                      }
                    },
                    "description": "Optional uk-width-($with) class for the modal to use.",
                    "name": "width",
                    "longname": "module.exports.props.width",
                    "kind": "member",
                    "memberof": "module.exports.props",
                    "scope": "static",
                    "children": {},
                    "simpleName": "width"
                  },
                  "module.exports.props.container": {
                    "meta": {
                      "range": [
                        895,
                        913
                      ],
                      "lineno": 41,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000024",
                        "name": "container",
                        "type": "Identifier",
                        "value": "Boolean"
                      }
                    },
                    "description": "Adds the uk-modal-Container class",
                    "name": "container",
                    "longname": "module.exports.props.container",
                    "kind": "member",
                    "memberof": "module.exports.props",
                    "scope": "static",
                    "simpleName": "container"
                  }
                }
              },
              "module.exports.computed": {
                "meta": {
                  "range": [
                    1327,
                    1567
                  ],
                  "lineno": 64,
                  "columnno": 4,
                  "code": {
                    "id": "astnode100000035",
                    "name": "computed",
                    "type": "ObjectExpression",
                    "value": "{\"clsWidth\":\"\"}"
                  }
                },
                "undocumented": true,
                "name": "computed",
                "longname": "module.exports.computed",
                "kind": "member",
                "memberof": "module.exports",
                "scope": "static",
                "children": {
                  "module.exports.computed.clsWidth": {
                    "meta": {
                      "range": [
                        1476,
                        1561
                      ],
                      "lineno": 70,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000037",
                        "name": "clsWidth",
                        "type": "FunctionExpression"
                      }
                    },
                    "description": "resolves the used width class",
                    "returns": [
                      {
                        "type": {
                          "names": [
                            "String"
                          ]
                        },
                        "description": "The class to be used in the modal"
                      }
                    ],
                    "name": "clsWidth",
                    "longname": "module.exports.computed.clsWidth",
                    "kind": "function",
                    "memberof": "module.exports.computed",
                    "scope": "static",
                    "simpleName": "clsWidth",
                    "params": [],
                    "tables": {
                      "arguments": [
                        {}
                      ]
                    }
                  }
                }
              },
              "module.exports.beforeDestroy": {
                "meta": {
                  "range": [
                    1594,
                    1666
                  ],
                  "lineno": 76,
                  "columnno": 4,
                  "code": {
                    "id": "astnode100000052",
                    "name": "beforeDestroy",
                    "type": "FunctionExpression"
                  }
                },
                "access": "private",
                "name": "beforeDestroy",
                "longname": "module.exports.beforeDestroy",
                "kind": "function",
                "memberof": "module.exports",
                "scope": "static",
                "simpleName": "beforeDestroy",
                "params": [],
                "tables": {
                  "arguments": [
                    {}
                  ]
                }
              },
              "module.exports.methods": {
                "meta": {
                  "range": [
                    1673,
                    3827
                  ],
                  "lineno": 80,
                  "columnno": 4,
                  "code": {
                    "id": "astnode100000067",
                    "name": "methods",
                    "type": "ObjectExpression",
                    "value": "{\"getContent\":\"\",\"contentOnce\":\"\",\"open\":\"\",\"close\":\"\",\"onHidden\":\"\"}"
                  }
                },
                "undocumented": true,
                "name": "methods",
                "longname": "module.exports.methods",
                "kind": "member",
                "memberof": "module.exports",
                "scope": "static",
                "children": {
                  "module.exports.methods.getContent": {
                    "meta": {
                      "range": [
                        1798,
                        1905
                      ],
                      "lineno": 85,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000069",
                        "name": "getContent",
                        "type": "FunctionExpression"
                      }
                    },
                    "returns": [
                      {
                        "type": {
                          "names": [
                            "VueComponentInstance"
                          ]
                        },
                        "description": "Returns the current content component"
                      }
                    ],
                    "name": "getContent",
                    "longname": "module.exports.methods.getContent",
                    "kind": "function",
                    "memberof": "module.exports.methods",
                    "scope": "static",
                    "simpleName": "getContent",
                    "params": [],
                    "tables": {
                      "arguments": [
                        {}
                      ]
                    }
                  },
                  "module.exports.methods.contentOnce": {
                    "meta": {
                      "range": [
                        2125,
                        2346
                      ],
                      "lineno": 94,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000088",
                        "name": "contentOnce",
                        "type": "FunctionExpression"
                      },
                      "vars": {
                        "": null
                      }
                    },
                    "description": "Registers a listener on the content component",
                    "params": [
                      {
                        "type": {
                          "names": [
                            "String"
                          ]
                        },
                        "description": "The event name",
                        "name": "event"
                      },
                      {
                        "type": {
                          "names": [
                            "function"
                          ]
                        },
                        "description": "the function to be called on the event",
                        "name": "handler"
                      }
                    ],
                    "name": "contentOnce",
                    "longname": "module.exports.methods.contentOnce",
                    "kind": "function",
                    "memberof": "module.exports.methods",
                    "scope": "static",
                    "simpleName": "contentOnce",
                    "tables": {
                      "arguments": [
                        {
                          "0": "name",
                          "1": "type",
                          "3": "description"
                        },
                        {
                          "0": "event",
                          "1": {
                            "template": "types",
                            "type": {
                              "names": [
                                "String"
                              ]
                            }
                          },
                          "3": "The event name"
                        },
                        {
                          "0": "handler",
                          "1": {
                            "template": "types",
                            "type": {
                              "names": [
                                "function"
                              ]
                            }
                          },
                          "3": "the function to be called on the event"
                        }
                      ]
                    }
                  },
                  "module.exports.methods.open": {
                    "meta": {
                      "range": [
                        2675,
                        3241
                      ],
                      "lineno": 108,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000124",
                        "name": "open",
                        "type": "FunctionExpression"
                      },
                      "vars": {
                        "events": "module.exports.methods.open~events",
                        "this.modal": "module.exports.methods.open#modal",
                        "p": "module.exports.methods.open~p",
                        "": null
                      }
                    },
                    "description": "open the modal",
                    "params": [
                      {
                        "type": {
                          "names": [
                            "Object"
                          ]
                        },
                        "optional": true,
                        "name": "options",
                        "defaultvalue": "{}",
                        "children": {
                          "events": {
                            "type": {
                              "names": [
                                "Object"
                              ]
                            },
                            "description": "Hash of listeners to be registered to the content component to be executed once",
                            "name": "events"
                          }
                        }
                      }
                    ],
                    "returns": [
                      {
                        "type": {
                          "names": [
                            "Promise.<this>"
                          ]
                        },
                        "description": "Returns a promise resolving with this modal when the content is ready"
                      }
                    ],
                    "name": "open",
                    "longname": "module.exports.methods.open",
                    "kind": "function",
                    "memberof": "module.exports.methods",
                    "scope": "static",
                    "simpleName": "open",
                    "tables": {
                      "arguments": [
                        {
                          "0": "name",
                          "1": "type",
                          "2": "default"
                        },
                        {
                          "0": "options",
                          "1": {
                            "template": "types",
                            "type": {
                              "names": [
                                "Object"
                              ]
                            }
                          },
                          "2": "{}",
                          "optional": true
                        }
                      ],
                      "options": [
                        {
                          "0": "name",
                          "1": "type",
                          "3": "description"
                        },
                        {
                          "0": "events",
                          "1": {
                            "template": "types",
                            "type": {
                              "names": [
                                "Object"
                              ]
                            }
                          },
                          "3": "Hash of listeners to be registered to the content component to be executed once"
                        }
                      ]
                    },
                    "children": {}
                  },
                  "module.exports.methods.close": {
                    "meta": {
                      "range": [
                        3384,
                        3441
                      ],
                      "lineno": 133,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000207",
                        "name": "close",
                        "type": "FunctionExpression"
                      }
                    },
                    "description": "Closes the modal",
                    "returns": [
                      {
                        "type": {
                          "names": [
                            "Promise"
                          ]
                        },
                        "description": "A promise that resolves when the modal is closed."
                      }
                    ],
                    "name": "close",
                    "longname": "module.exports.methods.close",
                    "kind": "function",
                    "memberof": "module.exports.methods",
                    "scope": "static",
                    "simpleName": "close",
                    "params": [],
                    "tables": {
                      "arguments": [
                        {}
                      ]
                    }
                  },
                  "module.exports.methods.onHidden": {
                    "meta": {
                      "range": [
                        3496,
                        3821
                      ],
                      "lineno": 140,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000217",
                        "name": "onHidden",
                        "type": "FunctionExpression"
                      },
                      "vars": {
                        "content": "module.exports.methods.onHidden~content",
                        "this.opened": "module.exports.methods.onHidden#opened"
                      }
                    },
                    "access": "private",
                    "name": "onHidden",
                    "longname": "module.exports.methods.onHidden",
                    "kind": "function",
                    "memberof": "module.exports.methods",
                    "scope": "static",
                    "simpleName": "onHidden",
                    "params": [],
                    "tables": {
                      "arguments": [
                        {}
                      ]
                    },
                    "children": {}
                  }
                }
              }
            }
          },
          "contentEvents": {
            "meta": {
              "range": [
                1071,
                1088
              ],
              "lineno": 50,
              "columnno": 12,
              "code": {
                "id": "astnode100000031",
                "name": "contentEvents",
                "type": "ArrayExpression",
                "value": "[]"
              }
            },
            "description": "A list of registered events",
            "type": {
              "names": [
                "Array.<String>"
              ]
            },
            "name": "contentEvents",
            "longname": "contentEvents",
            "kind": "member",
            "scope": "global"
          },
          "opened": {
            "meta": {
              "range": [
                1215,
                1228
              ],
              "lineno": 55,
              "columnno": 12,
              "code": {
                "id": "astnode100000033",
                "name": "opened",
                "type": "Literal",
                "value": false
              }
            },
            "description": "Weather this Modal has been opened",
            "type": {
              "names": [
                "Boolean"
              ]
            },
            "name": "opened",
            "longname": "opened",
            "kind": "member",
            "scope": "global"
          },
          "event:close": {
            "meta": {
              "lineno": 144,
              "columnno": 12,
              "code": {}
            },
            "description": "triggered when the modal has been closed",
            "kind": "event",
            "name": "close",
            "longname": "event:close",
            "scope": "global"
          }
        }
      },
      "component": {
        "props": {
          "props": {
            "meta": {
              "range": [
                407,
                479
              ],
              "lineno": 16,
              "columnno": 8,
              "code": {
                "id": "astnode100000010",
                "name": "props",
                "type": "ObjectExpression",
                "value": "{\"type\":\"\",\"required\":false}"
              }
            },
            "description": "When using the modal with a content component, you can pass the child's component properties here",
            "examples": [
              "<Modal :props=\"{type:'checkbox'}\" :content=\"InputConpnent\"/>"
            ],
            "name": "props",
            "longname": "module.exports.props.props",
            "kind": "member",
            "memberof": "module.exports.props",
            "scope": "static",
            "children": {},
            "simpleName": "props"
          },
          "test": {
            "meta": {
              "range": [
                541,
                553
              ],
              "lineno": 24,
              "columnno": 8,
              "code": {
                "id": "astnode100000016",
                "name": "test",
                "type": "Identifier",
                "value": "String"
              }
            },
            "description": "a test property",
            "name": "test",
            "longname": "module.exports.props.test",
            "kind": "member",
            "memberof": "module.exports.props",
            "scope": "static",
            "simpleName": "test"
          },
          "content": {
            "meta": {
              "range": [
                656,
                671
              ],
              "lineno": 29,
              "columnno": 8,
              "code": {
                "id": "astnode100000018",
                "name": "content",
                "type": "Identifier",
                "value": "Object"
              }
            },
            "description": "A component descriptor to construct a child element from",
            "name": "content",
            "longname": "module.exports.props.content",
            "kind": "member",
            "memberof": "module.exports.props",
            "scope": "static",
            "simpleName": "content"
          },
          "width": {
            "meta": {
              "range": [
                772,
                815
              ],
              "lineno": 34,
              "columnno": 8,
              "code": {
                "id": "astnode100000020",
                "name": "width",
                "type": "ObjectExpression",
                "value": "{\"type\":\"\"}"
              }
            },
            "description": "Optional uk-width-($with) class for the modal to use.",
            "name": "width",
            "longname": "module.exports.props.width",
            "kind": "member",
            "memberof": "module.exports.props",
            "scope": "static",
            "children": {},
            "simpleName": "width"
          },
          "container": {
            "meta": {
              "range": [
                895,
                913
              ],
              "lineno": 41,
              "columnno": 8,
              "code": {
                "id": "astnode100000024",
                "name": "container",
                "type": "Identifier",
                "value": "Boolean"
              }
            },
            "description": "Adds the uk-modal-Container class",
            "name": "container",
            "longname": "module.exports.props.container",
            "kind": "member",
            "memberof": "module.exports.props",
            "scope": "static",
            "simpleName": "container"
          }
        },
        "data": {
          "contentEvents": {
            "meta": {
              "range": [
                1071,
                1088
              ],
              "lineno": 50,
              "columnno": 12,
              "code": {
                "id": "astnode100000031",
                "name": "contentEvents",
                "type": "ArrayExpression",
                "value": "[]"
              }
            },
            "description": "A list of registered events",
            "type": {
              "names": [
                "Array.<String>"
              ]
            },
            "name": "contentEvents",
            "longname": "contentEvents",
            "kind": "member",
            "scope": "global"
          },
          "opened": {
            "meta": {
              "range": [
                1215,
                1228
              ],
              "lineno": 55,
              "columnno": 12,
              "code": {
                "id": "astnode100000033",
                "name": "opened",
                "type": "Literal",
                "value": false
              }
            },
            "description": "Weather this Modal has been opened",
            "type": {
              "names": [
                "Boolean"
              ]
            },
            "name": "opened",
            "longname": "opened",
            "kind": "member",
            "scope": "global"
          }
        },
        "computed": {
          "clsWidth": {
            "meta": {
              "range": [
                1476,
                1561
              ],
              "lineno": 70,
              "columnno": 8,
              "code": {
                "id": "astnode100000037",
                "name": "clsWidth",
                "type": "FunctionExpression"
              }
            },
            "description": "resolves the used width class",
            "returns": [
              {
                "type": {
                  "names": [
                    "String"
                  ]
                },
                "description": "The class to be used in the modal"
              }
            ],
            "name": "clsWidth",
            "longname": "module.exports.computed.clsWidth",
            "kind": "function",
            "memberof": "module.exports.computed",
            "scope": "static",
            "simpleName": "clsWidth",
            "params": [],
            "tables": {
              "arguments": [
                {}
              ]
            }
          }
        },
        "methods": {
          "getContent": {
            "meta": {
              "range": [
                1798,
                1905
              ],
              "lineno": 85,
              "columnno": 8,
              "code": {
                "id": "astnode100000069",
                "name": "getContent",
                "type": "FunctionExpression"
              }
            },
            "returns": [
              {
                "type": {
                  "names": [
                    "VueComponentInstance"
                  ]
                },
                "description": "Returns the current content component"
              }
            ],
            "name": "getContent",
            "longname": "module.exports.methods.getContent",
            "kind": "function",
            "memberof": "module.exports.methods",
            "scope": "static",
            "simpleName": "getContent",
            "params": [],
            "tables": {
              "arguments": [
                {}
              ]
            }
          },
          "contentOnce": {
            "meta": {
              "range": [
                2125,
                2346
              ],
              "lineno": 94,
              "columnno": 8,
              "code": {
                "id": "astnode100000088",
                "name": "contentOnce",
                "type": "FunctionExpression"
              },
              "vars": {
                "": null
              }
            },
            "description": "Registers a listener on the content component",
            "params": [
              {
                "type": {
                  "names": [
                    "String"
                  ]
                },
                "description": "The event name",
                "name": "event"
              },
              {
                "type": {
                  "names": [
                    "function"
                  ]
                },
                "description": "the function to be called on the event",
                "name": "handler"
              }
            ],
            "name": "contentOnce",
            "longname": "module.exports.methods.contentOnce",
            "kind": "function",
            "memberof": "module.exports.methods",
            "scope": "static",
            "simpleName": "contentOnce",
            "tables": {
              "arguments": [
                {
                  "0": "name",
                  "1": "type",
                  "3": "description"
                },
                {
                  "0": "event",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "String"
                      ]
                    }
                  },
                  "3": "The event name"
                },
                {
                  "0": "handler",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "function"
                      ]
                    }
                  },
                  "3": "the function to be called on the event"
                }
              ]
            }
          },
          "open": {
            "meta": {
              "range": [
                2675,
                3241
              ],
              "lineno": 108,
              "columnno": 8,
              "code": {
                "id": "astnode100000124",
                "name": "open",
                "type": "FunctionExpression"
              },
              "vars": {
                "events": "module.exports.methods.open~events",
                "this.modal": "module.exports.methods.open#modal",
                "p": "module.exports.methods.open~p",
                "": null
              }
            },
            "description": "open the modal",
            "params": [
              {
                "type": {
                  "names": [
                    "Object"
                  ]
                },
                "optional": true,
                "name": "options",
                "defaultvalue": "{}",
                "children": {
                  "events": {
                    "type": {
                      "names": [
                        "Object"
                      ]
                    },
                    "description": "Hash of listeners to be registered to the content component to be executed once",
                    "name": "events"
                  }
                }
              }
            ],
            "returns": [
              {
                "type": {
                  "names": [
                    "Promise.<this>"
                  ]
                },
                "description": "Returns a promise resolving with this modal when the content is ready"
              }
            ],
            "name": "open",
            "longname": "module.exports.methods.open",
            "kind": "function",
            "memberof": "module.exports.methods",
            "scope": "static",
            "simpleName": "open",
            "tables": {
              "arguments": [
                {
                  "0": "name",
                  "1": "type",
                  "2": "default"
                },
                {
                  "0": "options",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "Object"
                      ]
                    }
                  },
                  "2": "{}",
                  "optional": true
                }
              ],
              "options": [
                {
                  "0": "name",
                  "1": "type",
                  "3": "description"
                },
                {
                  "0": "events",
                  "1": {
                    "template": "types",
                    "type": {
                      "names": [
                        "Object"
                      ]
                    }
                  },
                  "3": "Hash of listeners to be registered to the content component to be executed once"
                }
              ]
            },
            "children": {}
          },
          "close": {
            "meta": {
              "range": [
                3384,
                3441
              ],
              "lineno": 133,
              "columnno": 8,
              "code": {
                "id": "astnode100000207",
                "name": "close",
                "type": "FunctionExpression"
              }
            },
            "description": "Closes the modal",
            "returns": [
              {
                "type": {
                  "names": [
                    "Promise"
                  ]
                },
                "description": "A promise that resolves when the modal is closed."
              }
            ],
            "name": "close",
            "longname": "module.exports.methods.close",
            "kind": "function",
            "memberof": "module.exports.methods",
            "scope": "static",
            "simpleName": "close",
            "params": [],
            "tables": {
              "arguments": [
                {}
              ]
            }
          },
          "onHidden": {
            "meta": {
              "range": [
                3496,
                3821
              ],
              "lineno": 140,
              "columnno": 8,
              "code": {
                "id": "astnode100000217",
                "name": "onHidden",
                "type": "FunctionExpression"
              },
              "vars": {
                "content": "module.exports.methods.onHidden~content",
                "this.opened": "module.exports.methods.onHidden#opened"
              }
            },
            "access": "private",
            "name": "onHidden",
            "longname": "module.exports.methods.onHidden",
            "kind": "function",
            "memberof": "module.exports.methods",
            "scope": "static",
            "simpleName": "onHidden",
            "params": [],
            "tables": {
              "arguments": [
                {}
              ]
            },
            "children": {}
          }
        },
        "emit": {
          "close": {
            "meta": {
              "lineno": 144,
              "columnno": 12,
              "code": {}
            },
            "description": "triggered when the modal has been closed",
            "kind": "event",
            "name": "close",
            "longname": "event:close",
            "scope": "global"
          }
        },
        "description": "Reusable modal component using UIkit.modal and VUE. Rad!",
        "slot": {
          "default": {
            "comment": "<!-- @slot default The slot for the\n                content if slotted method is used -->",
            "kind": "slot",
            "type": {
              "names": [
                null
              ]
            },
            "name": "default",
            "description": "The slot for the\n                content if slotted method is used"
          }
        }
      }
    },
    "src.vue.SpecialElement.vue": {
      "path": "/Users/jms/doctools/examples/src/vue/SpecialElement.vue",
      "type": "VueComponent",
      "name": "SpecialElement",
      "resource": "src.vue.SpecialElement.vue",
      "fileInPackage": "./src/vue/SpecialElement.vue",
      "package": "examples",
      "module": {
        "global": {
          "module.exports": {
            "meta": {
              "range": [
                38,
                269
              ],
              "lineno": 3,
              "columnno": 0,
              "code": {
                "id": "astnode100000006",
                "name": "module.exports",
                "type": "ObjectExpression"
              }
            },
            "undocumented": true,
            "name": "exports",
            "longname": "module.exports",
            "kind": "member",
            "memberof": "module",
            "scope": "static",
            "children": {
              "module.exports.computed": {
                "meta": {
                  "range": [
                    81,
                    267
                  ],
                  "lineno": 5,
                  "columnno": 4,
                  "code": {
                    "id": "astnode100000010",
                    "name": "computed",
                    "type": "ObjectExpression",
                    "value": "{\"myPrivateMember\":\"\"}"
                  }
                },
                "undocumented": true,
                "name": "computed",
                "longname": "module.exports.computed",
                "kind": "member",
                "memberof": "module.exports",
                "scope": "static",
                "children": {
                  "module.exports.computed.myPrivateMember": {
                    "meta": {
                      "range": [
                        206,
                        261
                      ],
                      "lineno": 12,
                      "columnno": 8,
                      "code": {
                        "id": "astnode100000012",
                        "name": "myPrivateMember",
                        "type": "FunctionExpression"
                      }
                    },
                    "description": "a fucking test memebers",
                    "access": "private",
                    "type": {
                      "names": [
                        "String"
                      ]
                    },
                    "name": "myPrivateMember",
                    "longname": "module.exports.computed.myPrivateMember",
                    "kind": "function",
                    "memberof": "module.exports.computed",
                    "scope": "static",
                    "simpleName": "myPrivateMember",
                    "params": [],
                    "tables": {
                      "arguments": [
                        {}
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "component": {
        "computed": {
          "myPrivateMember": {
            "meta": {
              "range": [
                206,
                261
              ],
              "lineno": 12,
              "columnno": 8,
              "code": {
                "id": "astnode100000012",
                "name": "myPrivateMember",
                "type": "FunctionExpression"
              }
            },
            "description": "a fucking test memebers",
            "access": "private",
            "type": {
              "names": [
                "String"
              ]
            },
            "name": "myPrivateMember",
            "longname": "module.exports.computed.myPrivateMember",
            "kind": "function",
            "memberof": "module.exports.computed",
            "scope": "static",
            "simpleName": "myPrivateMember",
            "params": [],
            "tables": {
              "arguments": [
                {}
              ]
            }
          }
        }
      }
    }
  },
  "rootPackage": "examples"
}